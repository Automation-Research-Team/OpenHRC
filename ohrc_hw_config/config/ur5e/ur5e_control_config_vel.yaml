/**:
  ros__parameters:
    # chain_start: "base_link" # base frame of commands
    # chain_end: "tool0" # target eff frame
    root_frame: "world" # IK calculation base frame (for multi-follower)

    controller: "Velocity" # "Position" or "Velocity"
    # publisher: "Velocity" # "Position" or "Velocity" or "Trajectory" or "TrajectoryAction"
    # topic_namespace: "joint_group_vel_controller"

    solver: "MyIK"

    self_collision_avoidance: true

    control_freq: 500.0

    # initIKAngle: [0, -1., 2., -2.5, -1.5, 0] # size of this should be equal to DoF

    # # initial_pose_frame: test # default frame is same as chain_start
    # initial_pose: [0.35, 0.0, 0.3, 3.141592, 0, 0] # [x, y, z, roll, pitch, yaw]

    # follower_list: # robot namespace list. They should be unique. ("") means the robot has no namespace
    #   ur5e: # robot config name, which needs to be defined in hw_config.yaml
    #     name: [""] # robot namespace
    # follower_hw: ["ur5e", "a"] # robot config name, which needs to be defined in hw_config.yaml
    # follower_ns: # robot namespaces for each robot, which should be unique among all robots. ("") means the robot has no namespace
    #   ur5e: ["a"] 

    follower:
      hw: ["ur5e", "a"] # robot config name, which needs to be defined in hw_config.yaml
      ns: # robot namespaces for each robot, which should be unique among all robots. ("") means the robot has no namespace
        ur5e: ["aa", "c"]
        a: ["bb"]


    priority: "Manual" #"Automation" #  (for multi-follower)
    MF_mode: "Individual"  #  (for multi-follower)


    # Type of solving IK. "Concatenated" mode solve IK for all robots at once. "Order" mode solve IK for each robot in order. "Parallel" mode solve IK for all robots in multi thread.
    # When you operate single robot, "Concatenated" mode is equivalent to "Order" mode.
    IK_mode: "Concatenated" # "Order" # "Parallel" #
