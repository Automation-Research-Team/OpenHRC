<?xml version="1.0"?>
<launch>
  <arg name="robot" default="ur5e" />
  <arg name="controller" default="vel" /> <!-- vel or vel_trj or vel_pos -->
  <arg name="interface" default="marker" />
  <arg name="feedback_mode" default="PositionFeedback" />
  <arg name="use_ft_filter" default="true" />
  <arg name="user_frame_viewpoint" default="back" />

  <arg name="hw_config" default="$(find ohrc_hw_config)/$(arg robot)/$(arg robot)_hw_config.yaml" />
  <arg name="admittance_config" default="$(find ohrc_control)/config/admittance_config.yaml" />
  <arg name="control_config" default="$(find ohrc_hw_config)/$(arg robot)/$(arg robot)_control_config_$(arg controller).yaml" />
  <arg name="interface_config" default="$(find ohrc_teleoperation)/config/$(arg interface)_config.yaml" />

  <arg name="use_rviz" default="true" />
  <arg name="rviz_config" default="$(find ohrc_teleoperation)/config/teleoperation.rviz" />

  <include file="$(find ohrc_control)/launch/ohrc_control.xml">
    <arg name="app" value="teleoperation" />

    <arg name="robot" value="$(arg robot)" />
    <arg name="controller" value="$(arg controller)" />
    <arg name="interface" value="$(arg interface)" />
    <arg name="feedback_mode" value="$(arg feedback_mode)" />
    <arg name="use_ft_filter" value="$(arg use_ft_filter)" />

    <arg name="hw_config" value="$(arg hw_config)" />
    <arg name="admittance_config" value="$(arg admittance_config)" />
    <arg name="control_config" value="$(arg control_config)" />
    <arg name="interface_config" value="$(arg interface_config)" />

    <arg name="use_rviz" value="$(arg use_rviz)" />
    <arg name="rviz_config" value="$(arg rviz_config)" />
  </include>
    
  <node pkg="tf2_ros" type="static_transform_publisher" name="user_frame_broadcaster" args="0 0 0 0 0 0 world user_frame" if="$(eval user_frame_viewpoint == 'back')" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="user_frame_broadcaster" args="0 0 0 3.141592 0 0 world user_frame" if="$(eval user_frame_viewpoint == 'face')" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="user_frame_broadcaster" args="0 0 0 1.57079 0 0 world user_frame" if="$(eval user_frame_viewpoint == 'right')"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="user_frame_broadcaster" args="0 0 0 -1.57079 0 0 world user_frame" if="$(eval user_frame_viewpoint == 'left')"/>

</launch>
